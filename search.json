[{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http:contributor-covenant.org), version 1.0.0, available https://contributor-covenant.org/version/1/0/0/","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 REDCapTidieR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/REDCapTidieR.html","id":"case-study-the-superhero-database","dir":"Articles","previous_headings":"","what":"Case Study: The Superhero Database","title":"Getting Started with REDCapTidieR","text":"Let’s look REDCap database information 734 superheroes, derived Superhero Database. screenshot REDCap Record Status Dashboard database. two instruments, Heroes Information captures “demographic” data individual superhero name, gender, alignment (good evil), Super Hero Powers captures one superpowers specific superhero possesses. REDCap Record Status Dashboard Superhero database","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/REDCapTidieR.html","id":"importing-data-from-redcap","dir":"Articles","previous_headings":"","what":"Importing data from REDCap","title":"Getting Started with REDCapTidieR","text":"import data REDCap, use read_redcap() function. read_redcap() requires REDCap database URI REDCap API token. need API access REDCap database use REDCapTidieR. REDCapTidieR work files exported REDCap. use import data Superheroes database. can see returns tibble named superheroes. use rmarkdown::paged_table() can explore tibble. can see tibble read_redcap() returned two rows. may surprising might expect rows database 734 superheroes. read_redcap() returns data special object call supertibble. supertibble contains, among things, tibbles data metadata derived instrument. call data tibbles metadata tibbles. row supertibble corresponds one REDCap instrument. redcap_form_name redcap_form_label columns identify instrument row relates . redcap_data column contains data tibbles. redcap_metadata column contains metadata tibbles. Additional columns contain useful information data tibble, row column counts, size memory, percentage missing values data.","code":"library(REDCapTidieR) superheroes <- read_redcap(redcap_uri, token)  superheroes |>   rmarkdown::paged_table()"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/REDCapTidieR.html","id":"exploring-the-contents-of-the-supertibble","dir":"Articles","previous_headings":"","what":"Exploring the contents of the supertibble","title":"Getting Started with REDCapTidieR","text":"designed supertibble can explore RStudio Data Viewer. can click table icon Environment tab view supertibble data viewer. glance see overview instruments REDCap project. Data Viewer showing superheroes supertibble can drill individual tables redcap_data redcap_metadata columns. Note heroes_information data tibble, row represents superhero, identified record_id. Data Viewer showing heroes_information data tibble super_hero_powers data tibble, row represents superpower specific hero. row identified combination record_id redcap_repeat_instance. difference granularity REDCap super_hero_powers designated repeating instrument whereas heroes_information designated nonrepeating instrument. Data Viewer showing super_hero_powers data tibble can also explore metadata tibbles redcap_metadata column find field labels, field types, field attributes. Data Viewer showing heroes_information metadata tibble","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/REDCapTidieR.html","id":"extracting-data-tibbles-from-the-supertibble","dir":"Articles","previous_headings":"","what":"Extracting data tibbles from the supertibble","title":"Getting Started with REDCapTidieR","text":"REDCapTidieR provides three different functions extract data tibbles supertibble.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/REDCapTidieR.html","id":"binding-data-tibbles-into-the-environment","dir":"Articles","previous_headings":"Extracting data tibbles from the supertibble","what":"Binding data tibbles into the environment","title":"Getting Started with REDCapTidieR","text":"bind_tibbles() function takes supertibble binds data tibbles directly global environment. use bind_tibbles() working interactively RStudio IDE, see data tibbles appear Environment pane. Demonstration bind_tibbles function default, bind_tibbles() extracts data tibbles supertibble. tbls argument can specify subset data tibbles extracted. environment argument can supply environment object tibbles bound.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/REDCapTidieR.html","id":"extracting-a-list-of-data-tibbles","dir":"Articles","previous_headings":"Extracting data tibbles from the supertibble","what":"Extracting a list of data tibbles","title":"Getting Started with REDCapTidieR","text":"extract_tibbles() function takes supertibble returns named list data tibbles. default extract data tibbles. use str show structure list returned extract_tibbles(). can use tidyselect selectors select specific data tibbles.","code":"superheroes_list <- superheroes |>   extract_tibbles()  superheroes_list |>   str(max.level = 1) #> List of 2 #>  $ heroes_information: tibble [734 × 12] (S3: tbl_df/tbl/data.frame) #>  $ super_hero_powers : tibble [5,966 × 4] (S3: tbl_df/tbl/data.frame) superheroes |>   extract_tibbles(ends_with(\"powers\")) |>   str(max.level = 1) #> List of 1 #>  $ super_hero_powers: tibble [5,966 × 4] (S3: tbl_df/tbl/data.frame)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/REDCapTidieR.html","id":"extracting-a-single-data-tibble","dir":"Articles","previous_headings":"Extracting data tibbles from the supertibble","what":"Extracting a single data tibble","title":"Getting Started with REDCapTidieR","text":"extract_tibble() takes supertibble returns single data tibble.","code":"superheroes |>   extract_tibble(\"heroes_information\") |>   rmarkdown::paged_table()"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/REDCapTidieR.html","id":"memory-considerations","dir":"Articles","previous_headings":"Extracting data tibbles from the supertibble","what":"Memory considerations","title":"Getting Started with REDCapTidieR","text":"might wonder ’s memory efficient supertibble extracted tibbles environment. R’s copy--modify behavior, extracted data tibbles actually use little additional memory. demonstrate , check size superheroes supertibble: bind data tibbles environment check combined size supertibble two data tibbles get following: true use extract_tibble() extract_tibbles() functions:","code":"lobstr::obj_size(superheroes) #> 313.50 kB superheroes |>   bind_tibbles()  lobstr::obj_size(superheroes, heroes_information, super_hero_powers) #> 313.50 kB a <- superheroes |> extract_tibble(\"heroes_information\") b <- superheroes |> extract_tibbles()  lobstr::obj_size(superheroes, a, b) #> 313.69 kB"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/REDCapTidieR.html","id":"adding-variable-labels-with-the-labelled-package","dir":"Articles","previous_headings":"","what":"Adding variable labels with the labelled package","title":"Getting Started with REDCapTidieR","text":"REDCapTidieR integrates labelled package allow attach labels variables supertibble. Variable labels can make data exploration easier. increasing number R packages support labelled data, including ggplot (via ggeasy) gtsummary. RStudio Data Viewer shows variable labels variable names. Data Viewer showing part labelled supertibble make_labelled() function takes supertibble returns supertibble variable labels applied variables supertibble well variables data metadata tibbles redcap_data redcap_metadata columns supertibble. can use labelled::look_for() function explore variable labels tibble. labels come ? labels actually REDCap field labels prompt data entry REDCap instrument! REDCapTidieR places field_label variable instrument’s metadata tibble. can see field labels REDCap instrument heroes_information labels . REDCap data entry view heroes_information instrument label name doesn’t look quite right. Let’s remove trailing :. make_labelled() function format_labels argument can use preprocess labels applying variables. Removing trailing : characters fairly common operation, REDCapTidieR provides format helper function can pass format_labels argument: find helpers included REDCapTidieR, see ?`format-helpers`. format_labels argument also accept multiple functions vector list. can use function takes character vector returns modified character vector. make_labelled() process variable labels using functions order supplied. following example, remove trailing colon fmt_strip_trailing_colon() make labels lower case base::tolower().","code":"superheroes |>   make_labelled() |>   bind_tibbles()  labelled::look_for(heroes_information) #>  pos variable             label                        col_type values     #>  1   record_id            Record ID                    dbl                 #>  2   name                 Hero name:                   chr                 #>  3   gender               Gender                       chr                 #>  4   eye_color            Eye color                    chr                 #>  5   race                 Race                         chr                 #>  6   hair_color           Hair color                   chr                 #>  7   height               Height                       dbl                 #>  8   weight               Weight                       dbl                 #>  9   publisher            Publisher                    chr                 #>  10  skin_color           Skin Color                   chr                 #>  11  alignment            Alignment                    chr                 #>  12  form_status_complete REDCap Instrument Completed? fct      Incomplete #>                                                                 Unverified #>                                                                 Complete superheroes |>   make_labelled(format_labels = ~gsub(\":\", \"\", .)) |>   bind_tibbles()  labelled::look_for(heroes_information, \"hero\") #>  pos variable label     col_type values #>  2   name     Hero name chr fmt_strip_trailing_colon(\"Hero name:\") #> [1] \"Hero name\" superheroes |>   make_labelled(     format_labels = c(       fmt_strip_trailing_colon,        base::tolower)   ) |>   bind_tibbles()  labelled::look_for(heroes_information) #>  pos variable             label                        col_type values     #>  1   record_id            record id                    dbl                 #>  2   name                 hero name                    chr                 #>  3   gender               gender                       chr                 #>  4   eye_color            eye color                    chr                 #>  5   race                 race                         chr                 #>  6   hair_color           hair color                   chr                 #>  7   height               height                       dbl                 #>  8   weight               weight                       dbl                 #>  9   publisher            publisher                    chr                 #>  10  skin_color           skin color                   chr                 #>  11  alignment            alignment                    chr                 #>  12  form_status_complete redcap instrument completed? fct      Incomplete #>                                                                 Unverified #>                                                                 Complete"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/diving_deeper.html","id":"the-block-matrix","dir":"Articles","previous_headings":"","what":"The Block Matrix","title":"Diving Deeper: Understanding REDCapTidieR Data Tibbles","text":"Getting Started vignette, stated importing records complex REDCap projects via REDCap API can ugly. section describe mean precise language. REDCapR::redcap_read_oneshot() function pulls data REDCap project via REDCap API provides R environment without performing much processing. returns list element named data contains data project single data frame. , use function import data Superhero REDCap database, contains nonrepeating instrument heroes_information repeating instrument super_hero_powers. use rmarkdown::paged_table() allow explore large data frame browser. data structure called block matrix. ’s happens REDCap mashes contents project repeating nonrepeating instruments single table. may seem good idea everything one data frame, significant downsides, including: ’s unwieldy! Although 734 superheroes data set, 6,700 rows. Every transformation first requires whittling huge data set. lot NA values. Many NA values don’t represent fields left blank data entry instead artifact table generated. Metadata helpful missing. example, ’s possible determine columns associated specific instrument nonrepeating instruments. meaning row data set inconsistent. rows represent observations per-record level (.e. derived nonrepeating instruments) others represent observations per-repeat-instance level (.e. derived repeating instruments). technically violates definition Tidy Data multiple types observational units stored table.","code":"superheroes_token <- \"123456789ABCDEF123456789ABCDEF04\" redcap_uri <- \"https://my.institution.edu/redcap/api/\" superheroes_ugly <- REDCapR::redcap_read_oneshot(redcap_uri, superheroes_token)$data  superheroes_ugly |>   rmarkdown::paged_table()"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/diving_deeper.html","id":"structure-of-redcaptidier-data-tibbles","dir":"Articles","previous_headings":"","what":"Structure of REDCapTidieR Data Tibbles","title":"Diving Deeper: Understanding REDCapTidieR Data Tibbles","text":"REDCapTidieR breaks block matrix data tibbles, one instrument. REDCapTidieR collects data tibbles list column supertibble. data tibbles tidier block matrix one instrument can repeating nonrepeating, therefore data tibble can one type observational unit stored inside . data tibble consistent granularity Let’s take look data tibbles derived Superhero database contrast block matrix. Consider heroes_information, contains data nonrepeating instrument. tibble much smaller block matrix 734 rows 12 columns, NAs. data tibble’s name heroes_information descriptive. REDCapTidieR knows names instruments addition querying project’s data also queries project’s metadata. entry granularity, one superhero, identified record_id. number data columns follow, starting name, gender, eye_color, race, etc. columns order REDCap instrument. last column REDCapTidieR data tibble always form_status_complete indicates whether instrument marked completed. Now consider super_hero_powers table, contains data repeating instrument. addition record_id redcap_repeat_instance column. granularity row one superpower per superhero, identified record_id redcap_repeat_instance. two columns uniquely identify row data tibble, call identifier columns. REDCapTidieR supertibble, identifier columns always come first, followed [data columns] finally form_status_complete column.","code":"library(REDCapTidieR)  read_redcap(redcap_uri, superheroes_token) |>   bind_tibbles()  heroes_information |>   rmarkdown::paged_table() super_hero_powers |>   rmarkdown::paged_table()"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/diving_deeper.html","id":"longitudinal-redcap-projects","dir":"Articles","previous_headings":"","what":"Longitudinal REDCap projects","title":"Diving Deeper: Understanding REDCapTidieR Data Tibbles","text":"REDCap databases support two main mechanisms allow collecting data multiple times: repeating instruments longitudinal projects. granularity table (.e. observational unit single row represents) depends structure project (classic, longitudinal, longitudinal multiple arms) well structure instrument (repeating nonrepeating). REDCapTidieR generates identifier columns according following table: Note: Taken combination, identifier columns REDCapTidieR tibble guaranteed unique NA can therefore used composite primary key. makes easy join REDCapTidieR tibbles ! default, REDCap names record ID field record_id, can changed, REDCapTidieR smart enough handle . example, record ID field renamed subject_id record ID column data tibble subject_id. Let’s look REDCap database might use capture data clinical trial. longitudinal database assesses data (e.g. demographics) just enrollment, data (e.g. physical exam labs) multiple times pre-defined study visits. use dplyr::select() highlight instrument names whether instrument repeating. database six nonrepeating three repeating instruments. demographics instrument nonrepeating. granularity one row per study subject per event, since designated single event, really one row per study subject. redcap_event column identifies name event instrument associated: screening__enrollm (Screening Enrollment). chemistry instrument nonrepeating well. However, designated multiple events chemistry labs drawn multiple study visits. redcap_event column shows chemistry data four different events. granularity one row per study subject per event. three subjects multiple rows. row identified combination subject_id redcap_event. adverse_events repeating. Since adverse events aren’t tied specific study visits, patient can number different adverse events time, makes sense designate instrument single special event adverse_event, ’ve done . granularity table one row per study subject per repeat instance per event. However since designated single event, really one row per study subject per repeat instance. first subject three adverse events listed, second subject two. possible repeating instrument designated multiple events, however uncommon pattern. REDCapTidieR supports scenario well. REDCapTidieR allow instrument designated repeating nonrepeating instrument different events. throw error detects . time, REDCapTidieR support repeating events. Feel free submit feature request something need! REDCapTidieR supports projects multiple arms. project multiple arms, additional column redcap_arm identify arm row associated .","code":"longitudinal_token <- \"123456789ABCDEF123456789ABCDEF06\" library(REDCapTidieR)  longitudinal <- read_redcap(redcap_uri, longitudinal_token)  longitudinal |>   dplyr::select(redcap_form_name, redcap_form_label, structure) |>   rmarkdown::paged_table() longitudinal |>   bind_tibbles()  demographics |>   rmarkdown::paged_table() chemistry |>   rmarkdown::paged_table() adverse_events |>   rmarkdown::paged_table()"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/diving_deeper.html","id":"categorical-variables","dir":"Articles","previous_headings":"","what":"Categorical variables","title":"Diving Deeper: Understanding REDCapTidieR Data Tibbles","text":"REDCapTidieR performs number opinionated transformations categorical fields streamline exploring working . Fields type yesno truefalse converted logical variables. Fields single-answer categorical type (dropdown, radio) converted factor variables default. understand REDCapTidieR constructs factor, consider Field Editor adverse_event_grade variable single-answer radio field. five choices field. Choices raw values choice labels, separated comma. , raw values 1, 2, 3, 4, 5, associated choice labels Grade 1, Grade 2, Grade 3, Grade 4, Grade 5. find choice labels generally useful intuitive work raw values. reason, REDCapTidieR derives labels factor choice label. order factor levels order choices REDCap. REDCap field editor showing choices single-answer field makes possible discover different choices specific field even represented data. example, even though Grade 1 2 adverse events data, can see 5 possible grades. Adverse event grades intrinsically ordered. multiple choice field intrinsically ordered choices, choices usually presented proper order. Since REDCapTidieR preserves order choices REDCap, can convert intrinsically ordered variables ordered factors. Fields multi-answer checkbox type expanded choice represented one logical variable. Consider adverse_event_relationship_other field. field eight choices, raw values (.e. part comma) apheresis, ld_chemo, soc_treatment, underlying_disease, other_research_proc, con_meds, . REDCap field editor showing choices multi-answer field recommend multi-answer checkbox fields make raw value human readable word example, serial number REDCap provide default. REDCapTidieR construct name variable name field, followed three underscores, followed raw value choice defined REDCap. variables REDCapTidieR generates adverse_event_relationship_other field:","code":"adverse_events$adverse_event_serious |>   dplyr::glimpse() #>  logi [1:5] FALSE FALSE FALSE FALSE FALSE adverse_events$adverse_event_grade #> [1] Grade 2 Grade 1 Grade 1 Grade 2 Grade 1 #> Levels: Grade 1 Grade 2 Grade 3 Grade 4 Grade 5 ae_grade <- adverse_events$adverse_event_grade  ae_grade |>   factor(ordered = TRUE, levels = levels(ae_grade)) #> [1] Grade 2 Grade 1 Grade 1 Grade 2 Grade 1 #> Levels: Grade 1 < Grade 2 < Grade 3 < Grade 4 < Grade 5 adverse_events |>   dplyr::select(dplyr::starts_with(\"adverse_event_relationship_other___\")) |>   dplyr::glimpse() #> Rows: 5 #> Columns: 8 #> $ adverse_event_relationship_other___apheresis           <lgl> FALSE, FALSE, F… #> $ adverse_event_relationship_other___ld_chemo            <lgl> FALSE, FALSE, F… #> $ adverse_event_relationship_other___soc_treatment       <lgl> FALSE, FALSE, F… #> $ adverse_event_relationship_other___underlying_disease  <lgl> TRUE, FALSE, FA… #> $ adverse_event_relationship_other___other_research_proc <lgl> FALSE, FALSE, F… #> $ adverse_event_relationship_other___con_meds            <lgl> TRUE, FALSE, TR… #> $ adverse_event_relationship_other___other               <lgl> FALSE, FALSE, F… #> $ adverse_event_relationship_other___none                <lgl> FALSE, TRUE, FA…"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/diving_deeper.html","id":"surveys","dir":"Articles","previous_headings":"","what":"Surveys","title":"Diving Deeper: Understanding REDCapTidieR Data Tibbles","text":"Instruments used generate REDCap Surveys generate additional data columns: redcap_survey_timestamp: time survey competed redcap_survey_identifier: participant identifier. NA Participant Identifier feature REDCap disabled.","code":"survey <- read_redcap(redcap_uri, survey_token) |>   extract_tibble(\"survey\")  survey |>   dplyr::glimpse() #> Rows: 4 #> Columns: 9 #> $ record_id                <dbl> 1, 2, 3, 4 #> $ survey_yesno             <lgl> TRUE, FALSE, NA, NA #> $ survey_radio             <fct> Choice 1, Choice 2, NA, NA #> $ survey_checkbox___one    <lgl> FALSE, FALSE, FALSE, FALSE #> $ survey_checkbox___two    <lgl> TRUE, TRUE, FALSE, FALSE #> $ survey_checkbox___three  <lgl> TRUE, TRUE, FALSE, FALSE #> $ redcap_survey_identifier <lgl> NA, NA, NA, NA #> $ redcap_survey_timestamp  <dttm> 2022-11-09 10:33:35, NA, NA, NA #> $ form_status_complete     <fct> Complete, Incomplete, Incomplete, Incomplete"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/diving_deeper.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Diving Deeper: Understanding REDCapTidieR Data Tibbles","text":"summary, rules REDCapTidieR constructs data tibbles: One data tibble built instrument. first column always record ID column derived record ID field. Additional identifier columns may follow record ID column, depending structure instrument structure project (see table ). identifier columns, data columns appear order REDCap instrument. True/false type fields converted logical columns. Single-answer categorical fields converted factor columns. Multi-answer checkbox fields expanded set logical columns, one choice. instrument used survey, survey timestamp identifier columns appear next. final column always form_status_complete.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"arm","dir":"Articles","previous_headings":"","what":"Arm","title":"Glossary of REDCap and REDCapTidieR Terms","text":"group events. Arms provide mechanism allows one longitudinal project multiple different sequences events defined. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"block-matrix","dir":"Articles","previous_headings":"","what":"Block matrix","title":"Glossary of REDCap and REDCapTidieR Terms","text":"rectangular data structure (matrix) constructed multiple smaller rectangular data structures (blocks). context REDCap, block matrix rectangular data set contains data instruments returned REDCap API. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"column","dir":"Articles","previous_headings":"","what":"Column","title":"Glossary of REDCap and REDCapTidieR Terms","text":"vertical series cells data frame tibble. Synonym: Variable. See also: Row. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"composite-primary-key","dir":"Articles","previous_headings":"","what":"Composite primary key","title":"Glossary of REDCap and REDCapTidieR Terms","text":"primary key column table distinct row serves identify row. composite primary key primary key consists multiple columns combination distinct row serve identify row. Taken together, identifier columns data tibble form composite primary key. makes easy join data tibbles together. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"choice","dir":"Articles","previous_headings":"","what":"Choice","title":"Glossary of REDCap and REDCapTidieR Terms","text":"option category defined context single-answer multi-answer categorical field type REDCap. can define choices using REDCap Field Editor. Choices raw value (unique identifier - usually serial number can changed) choice label (human readable description choice, displayed data entry). context REDCapTidieR, choices come play two scenarios construction data tibble. Choice labels single-answer type fields (dropdown radio) used define values data columns derived fields. Raw values multi-answer checkbox field used construct names data columns derived . ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"classic-project","dir":"Articles","previous_headings":"","what":"Classic project","title":"Glossary of REDCap and REDCapTidieR Terms","text":"Also known traditional project, simplest type REDCap project. can define one multiple instruments (also called forms) data entry. repeating nonrepeating instruments allowed. Nonrepeating instruments completed record. nonrepeating instruments, one row data data tibble represents one record. Repeating instruments can completed arbitrary number times record. repeating instruments, one row data data tibble represents one repeat instance one record. See also: Longitudinal project. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"database","dir":"Articles","previous_headings":"","what":"Database","title":"Glossary of REDCap and REDCapTidieR Terms","text":"context REDCap, project. prefer term “project” specific meaning. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"data-column","dir":"Articles","previous_headings":"","what":"Data column","title":"Glossary of REDCap and REDCapTidieR Terms","text":"column data tibble derived data entered fields REDCap instrument. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"data-tibble","dir":"Articles","previous_headings":"","what":"Data tibble","title":"Glossary of REDCap and REDCapTidieR Terms","text":"tibble contains data entered fields specific REDCap instrument. redcap_data column supertibble contains data tibbles project. columns data tibble include identifier columns jointly identify row data columns contain data entered REDCap. REDCapTidieR provides several functions extract data tibbles supertibble. See also: Metadata tibble. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"data-viewer","dir":"Articles","previous_headings":"","what":"Data viewer","title":"Glossary of REDCap and REDCapTidieR Terms","text":"part RStudio IDE functionality allows inspect data frames, tibbles, data structures. includes features perform basic exploratory data analysis sorting, filtering, searching. supertibble designed work well data viewer. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"environment","dir":"Articles","previous_headings":"","what":"Environment","title":"Glossary of REDCap and REDCapTidieR Terms","text":"fundamental data structure R allows binding set names set objects. global environment namespace bind objects values tibbles interactive work. bind_tibbles() function takes supertibble binds data tibbles global environment. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"event","dir":"Articles","previous_headings":"","what":"Event","title":"Glossary of REDCap and REDCapTidieR Terms","text":"part longitudinal project. event can associated one multiple instruments. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"factor-variable","dir":"Articles","previous_headings":"","what":"Factor variable","title":"Glossary of REDCap and REDCapTidieR Terms","text":"data type R categorical data. default, single-answer categorical REDCap field types (dropdown, radio) represented factor variables data tibble. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"field","dir":"Articles","previous_headings":"","what":"Field","title":"Glossary of REDCap and REDCapTidieR Terms","text":"attribute entity (e.g., age height) can captured REDCap. Instruments made fields. can configure fields instrument using REDCap Field Editor. Fields field type can descriptive field label. data tibble contains data entered fields REDCap project. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"field-label","dir":"Articles","previous_headings":"","what":"Field label","title":"Glossary of REDCap and REDCapTidieR Terms","text":"piece text acts prompt data entry REDCap. make_labelled() function creates variable labels based field label. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"field-type","dir":"Articles","previous_headings":"","what":"Field type","title":"Glossary of REDCap and REDCapTidieR Terms","text":"data type data can entered specific field. Important field types include: text, used free-text numeric data yesno truefalse, used logical data dropdown radio, used single-answer categorical data checkbox, used multi-answer categorical data ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"form","dir":"Articles","previous_headings":"","what":"Form","title":"Glossary of REDCap and REDCapTidieR Terms","text":"context REDCap, instrument. prefer term “instrument” specific meaning “form.” ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"format-helper","dir":"Articles","previous_headings":"","what":"Format helper","title":"Glossary of REDCap and REDCapTidieR Terms","text":"function provided REDCapTidieR designed help turning field labels data columns pretty variable labels. See format-helpers reference page. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"granularity","dir":"Articles","previous_headings":"","what":"Granularity","title":"Glossary of REDCap and REDCapTidieR Terms","text":"level detail specific row data tibble represents. depends structure project (classic vs. longitudinal vs longitudinal arms) structure instrument (nonrepeating vs repeating). example, data tibble containing data nonrepeating instrument longitudinal project two arms granularity one row per record per event per arm. See also: section Longitudinal REDCap projects Diving Deeper vignette. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"identifier-column","dir":"Articles","previous_headings":"","what":"Identifier column","title":"Glossary of REDCap and REDCapTidieR Terms","text":"column data tibble serves partially identify entity described row. record ID column always present data tibble. Depending structure project (classic vs. longitudinal vs. longitudinal arms) structure instrument (nonrepeating vs repeating) may additional identifier columns, including redcap_event, redcap_arm, /redcap_repeat_instance. Taken together, identifier columns form composite primary key. See also: section Longitudinal REDCap projects Diving Deeper vignette. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"import","dir":"Articles","previous_headings":"","what":"Import","title":"Glossary of REDCap and REDCapTidieR Terms","text":"context REDCapTidieR, process using REDCap API query data REDCap project make available inside R environment. use term “import” sense described R Data Science “take data stored file, database, web application programming interface (API), load data frame R.” note, term “import” ambiguous. perspective REDCap, “import” may mean writing external data database. clarify direction import, named main function REDCapTidieR read_redcap() analogous import functions tidyverse read_csv(). can use read_redcap() function import data REDCap project. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"instrument","dir":"Articles","previous_headings":"","what":"Instrument","title":"Glossary of REDCap and REDCapTidieR Terms","text":"Also called form. electronic data entry form REDCap. instrument consists one fields. supertibble, row corresponds one instrument. instrument’s name human-readable label shown redcap_form_name redcap_form_label columns supertibble, respectively. data tibble contains data entered specific instrument. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"labelled","dir":"Articles","previous_headings":"","what":"labelled","title":"Glossary of REDCap and REDCapTidieR Terms","text":"labelled R package provides functions attach human-readable description (label) variable (variable label). Labelled data can streamline data exploration assist generation data dictionary. multiple packages support labelled data. make_labelled() function attaches variable labels variables supertibble variables data tibbles metadata tibbles contained supertibble. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"list-column","dir":"Articles","previous_headings":"","what":"List column","title":"Glossary of REDCap and REDCapTidieR Terms","text":"list fundamental data type R. tibble can contain columns lists, columns called list columns. REDCapTidieR leverages list columns store tibbles inside supertibble. example, redcap_data column supertibble list column contains data tibbles, redcap_metadata list column contains metadata tibbles. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"longitudinal-project","dir":"Articles","previous_headings":"","what":"Longitudinal project","title":"Glossary of REDCap and REDCapTidieR Terms","text":"type REDCap project contains events optionally arms. One instrument can associated multiple events. makes possible collect kind data record multiple times, useful longitudinal research studies multiple study visits. See also: Classic project. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"metadata-tibble","dir":"Articles","previous_headings":"","what":"Metadata tibble","title":"Glossary of REDCap and REDCapTidieR Terms","text":"tibble contains metadata specific REDCap instrument. redcap_metadata column supertibble contains metadata tibbles project. rows metadata tibble represent fields instrument. columns represent attributes fields. example, field_name, field_label, field_type columns show field’s name, human-readable description (field label), field type. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"nonrepeating","dir":"Articles","previous_headings":"","what":"Nonrepeating","title":"Glossary of REDCap and REDCapTidieR Terms","text":"structure instrument allows filled exactly per record classic project per record per event (per arm) longitudinal project. See also: Repeating. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"project","dir":"Articles","previous_headings":"","what":"Project","title":"Glossary of REDCap and REDCapTidieR Terms","text":"Also called database, REDCap project self-contained collection data metadata related data collection activity (example, specific research study). project may classic longitudinal. classic project consists instruments contain fields. longitudinal project may additionally include events arms. can use read_redcap() import data project. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"record","dir":"Articles","previous_headings":"","what":"Record","title":"Glossary of REDCap and REDCapTidieR Terms","text":"set information single entity (e.g., study participant) data captured REDCap. record consists discrete data values organized fields can spread across multiple instruments, events, /arms. record unique record ID. data tibble, record ID always first column. one identifier columns. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"redcap-api","dir":"Articles","previous_headings":"","what":"REDCap API","title":"Glossary of REDCap and REDCapTidieR Terms","text":"application programming interface (API) REDCap instance allows external programs connect, upload, download data REDCap project. access REDCap API, user must appropriate access privileges, API token, uniform resource identifier (URI) API endpoint (something like “https://.institution.edu/redcap/api”). REDCapTidieR package uses REDCapR query REDCap API. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"redcapr","dir":"Articles","previous_headings":"","what":"REDCapR","title":"Glossary of REDCap and REDCapTidieR Terms","text":"REDCapR R package provides functions interact REDCap API. REDCapTidieR builds REDCapR import data. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"repeating","dir":"Articles","previous_headings":"","what":"Repeating","title":"Glossary of REDCap and REDCapTidieR Terms","text":"structure instrument allows filled zero, one, multiple times record. See also: Nonrepeating. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"row","dir":"Articles","previous_headings":"","what":"Row","title":"Glossary of REDCap and REDCapTidieR Terms","text":"horizontal series cells data frame tibble. One row supertibble represents instrument. One row data tibble can represent different things, depending granularity data. See also: Column. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"structure","dir":"Articles","previous_headings":"","what":"Structure","title":"Glossary of REDCap and REDCapTidieR Terms","text":"structure instrument can repeating nonrepeating. supertibble shows instrument’s structure structure column. structure project can classic, longitudinal, longitudinal arms. granularity data tibble depends structure instrument project. See also: section Longitudinal REDCap projects Diving Deeper vignette. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"supertibble","dir":"Articles","previous_headings":"","what":"Supertibble","title":"Glossary of REDCap and REDCapTidieR Terms","text":"special tibble contains data metadata REDCap project returned read_redcap() function. row supertibble corresponds one instrument. redcap_form_name redcap_form_label columns identify instrument. redcap_data redcap_metadata contain instrument’s data tibble metadata tibble. Additional columns contain useful information data tibble, row column counts, size memory, percentage missing values data. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"survey","dir":"Articles","previous_headings":"","what":"Survey","title":"Glossary of REDCap and REDCapTidieR Terms","text":"special kind instrument can completed someone user REDCap project. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"tibble","dir":"Articles","previous_headings":"","what":"Tibble","title":"Glossary of REDCap and REDCapTidieR Terms","text":"variant R data frame makes data analysis tidyverse little easier. data structures generated REDCapTidieR based tibbles. See also: chapter Tibbles R Data Science. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"tidy","dir":"Articles","previous_headings":"","what":"Tidy","title":"Glossary of REDCap and REDCapTidieR Terms","text":"term “tidy” part REDCapTidieR’s name underlies two key ideas package. first concept Tidy Data. rectangular data structure tidy : variable forms column observation forms row type observational unit forms table (.e. granularity rows table consistent) Data returned REDCap API (“block matrix”) often satisfies first two requirements tidy data. However, project contains repeating nonrepeating instruments granularity inconsistent row row. key function REDCapTidieR package break block matrix instrument. resulting set data tibbles tidy granularity data tibble consistent. makes easy work . second idea Tidy Tools, set design guidelines packages Tidyverse. Tidy tools follow following principles: Reuse existing data structures. Compose simple functions pipe. Embrace functional programming. Design humans. strive follow principles design REDCapTidieR package. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"variable","dir":"Articles","previous_headings":"","what":"Variable","title":"Glossary of REDCap and REDCapTidieR Terms","text":"column data frame tibble. See also: Column. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"variable-label","dir":"Articles","previous_headings":"","what":"Variable label","title":"Glossary of REDCap and REDCapTidieR Terms","text":"human-readable description (label) attached variable. See also: labelled. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Richard Hanna. Author, maintainer. Stephan Kadauke. Author. Ezra Porter. Author.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hanna R, Kadauke S, Porter E (2022). REDCapTidieR: Extract 'REDCap' Databases Tidy 'Tibble's. https://github.com/CHOP-CGTInformatics/REDCapTidieR, https://chop-cgtinformatics.github.io/REDCapTidieR/.","code":"@Manual{,   title = {REDCapTidieR: Extract 'REDCap' Databases into Tidy 'Tibble's},   author = {Richard Hanna and Stephan Kadauke and Ezra Porter},   year = {2022},   note = {https://github.com/CHOP-CGTInformatics/REDCapTidieR, https://chop-cgtinformatics.github.io/REDCapTidieR/}, }"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/index.html","id":"redcaptidier","dir":"","previous_headings":"","what":"Import REDCap databases into tidy tibbles","title":"Import REDCap databases into tidy tibbles","text":"REDCapTidieR package provides elegant way import data REDCap project R environment. builds upon REDCapR package query REDCap API transforms returned data set tidy tibbles. REDCapTidieR especially useful dealing complex REDCap projects longitudinal include repeating instruments .","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Import REDCap databases into tidy tibbles","text":"release version can installed CRAN. can install development version REDCapTidieR GitHub:","code":"install.packages(\"REDCapTidieR\") devtools::install_github(\"CHOP-CGTInformatics/REDCapTidieR\")"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Import REDCap databases into tidy tibbles","text":"Use read_redcap() together bind_tibbles() import data instruments environment. Demonstration using read_redcap bind_tibbles functions Read Getting Started vignette learn .","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/index.html","id":"collaboration","dir":"","previous_headings":"","what":"Collaboration","title":"Import REDCap databases into tidy tibbles","text":"invite give feedback collaborate us! familiar GitHub R packages, please feel free submit pull request. Please let us know REDCapTidieR fails whatever reason database submit bug report creating GitHub issue. Please note project released Contributor Code Conduct. participating agree abide terms. ’d like thank following folks advice code contributions: Beasley Paul Wildenhain.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/index.html","id":"funding","dir":"","previous_headings":"","what":"Funding","title":"Import REDCap databases into tidy tibbles","text":"package developed Children’s Hospital Philadelphia Cell Gene Therapy Informatics Team support needs Cellular Therapy Transplant Section. development funded using following sources: Stephan Kadauke Start-funds. Stephan Kadauke, PI, CHOP, 2018-2024 CHOP-based GMP cell manufacturing (MFG) CAR T clinical trials. Stephan Grupp, PI; Stephan Kadauke, co-PI, CHOP, 2020-2022","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/pull_request_template.html","id":null,"dir":"","previous_headings":"","what":"Description","title":"Description","text":"Provide description PR","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/pull_request_template.html","id":"proposed-changes","dir":"","previous_headings":"","what":"Proposed Changes","title":"Description","text":"List changes bullet format: Change 1 Change 2 Change 3 Screenshots applicable, add screenshots help explain proposed changes","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/pull_request_template.html","id":"issue-addressed","dir":"","previous_headings":"","what":"Issue Addressed","title":"Description","text":"Closes #[provide issue number link ]","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/pull_request_template.html","id":"pr-checklist","dir":"","previous_headings":"","what":"PR Checklist","title":"Description","text":"submitting PR, please check verify submission meets criteria: New/revised functions associated tests New/revised functions update downstream outputs associated static testing files (.RDS) updated inst/testdata/create_test_data.R New tests make API calls use httptest::with_mock_api new mocks added tests/testthat/fixtures/create_httptest_mocks.R New/revised functions use appropriate naming conventions New/revised functions don’t repeat code Code changes less 250 lines total Issues linked PR using GitHub’s list keywords appropriate reviewer assigned PR appropriate developers assigned PR","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/pull_request_template.html","id":"code-review","dir":"","previous_headings":"","what":"Code Review","title":"Description","text":"section used reviewer developers Code Review PR submission","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/pull_request_template.html","id":"code-review-checklist","dir":"","previous_headings":"","what":"Code Review Checklist","title":"Description","text":"checked new files follow naming conventions right place checked documentation complete, clear, without typos added/edited comments explain “” “” checked new variable function names follow naming conventions checked new tests written key business logic /bugs PR fixes checked new tests address important edge cases","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_event_mapping.html","id":null,"dir":"Reference","previous_headings":"","what":"Supplement a supertibble from a longitudinal database with information about\nthe events associated with each instrument — add_event_mapping","title":"Supplement a supertibble from a longitudinal database with information about\nthe events associated with each instrument — add_event_mapping","text":"Supplement supertibble longitudinal database information events associated instrument","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_event_mapping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Supplement a supertibble from a longitudinal database with information about\nthe events associated with each instrument — add_event_mapping","text":"","code":"add_event_mapping(supertbl, linked_arms)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_event_mapping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Supplement a supertibble from a longitudinal database with information about\nthe events associated with each instrument — add_event_mapping","text":"supertbl supertibble object supplement metadata linked_arms tibble event mappings created link_arms()","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_event_mapping.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Supplement a supertibble from a longitudinal database with information about\nthe events associated with each instrument — add_event_mapping","text":"original supertibble events redcap_events list column containing arms events associated instrument","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Supplement a supertibble with additional metadata fields — add_metadata","title":"Supplement a supertibble with additional metadata fields — add_metadata","text":"Supplement supertibble additional metadata fields","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Supplement a supertibble with additional metadata fields — add_metadata","text":"","code":"add_metadata(supertbl, db_metadata, redcap_uri, token)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Supplement a supertibble with additional metadata fields — add_metadata","text":"supertbl supertibble object supplement metadata db_metadata REDCap metadata tibble redcap_uri URI/URL REDCap server (e.g., \"https://server.org/apps/redcap/api/\"). Required. token user-specific string serves password project. Required.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Supplement a supertibble with additional metadata fields — add_metadata","text":"original supertibble additional fields: instrument_label containing labels instrument redcap_metadata containing metadata fields instrument list column","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_metadata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Supplement a supertibble with additional metadata fields — add_metadata","text":"function assumes db_metadata processed include row option multiselection field, .e. update_field_names()","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_partial_keys.html","id":null,"dir":"Reference","previous_headings":"","what":"Add partial key helper variables to dataframes — add_partial_keys","title":"Add partial key helper variables to dataframes — add_partial_keys","text":"Make helper variables redcap_event redcap_arm available branches var later use.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_partial_keys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add partial key helper variables to dataframes — add_partial_keys","text":"","code":"add_partial_keys(db_data, var)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_partial_keys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add partial key helper variables to dataframes — add_partial_keys","text":"db_data REDCap database output defined REDCapR::redcap_read_oneshot()$data var unquoted name field containing event arm identifiers","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_partial_keys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add partial key helper variables to dataframes — add_partial_keys","text":"Two appended columns, redcap_event redcap_arm end read_redcap output tibbles.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/bind_tibbles.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract data tibbles from a REDCapTidieR supertibble and bind them to an\nenvironment — bind_tibbles","title":"Extract data tibbles from a REDCapTidieR supertibble and bind them to an\nenvironment — bind_tibbles","text":"Take supertibble generated read_redcap() bind data tibbles (.e. tibbles redcap_data column) environment. default global environment.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/bind_tibbles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract data tibbles from a REDCapTidieR supertibble and bind them to an\nenvironment — bind_tibbles","text":"","code":"bind_tibbles(supertbl, environment = global_env(), tbls = NULL)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/bind_tibbles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract data tibbles from a REDCapTidieR supertibble and bind them to an\nenvironment — bind_tibbles","text":"supertbl supertibble generated read_redcap(). Required. environment environment bind tibbles . Default rlang::global_env(). tbls vector redcap_form_names data tibbles bind environment. Default NULL binds data tibbles.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/bind_tibbles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract data tibbles from a REDCapTidieR supertibble and bind them to an\nenvironment — bind_tibbles","text":"function returns nothing used solely side effect modifying environment.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/bind_tibbles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract data tibbles from a REDCapTidieR supertibble and bind them to an\nenvironment — bind_tibbles","text":"","code":"# Create an empty environment my_env <- new.env()  ls(my_env) #> character(0)  # Mock up a supertibble supertbl <- tibble::tribble(   ~redcap_form_name,    ~redcap_data,   ~structure,   \"super_hero_powers\",   list(),         \"repeating\",   \"heroes_information\",  list(),         \"nonrepeating\" )  bind_tibbles(supertbl, my_env)  ls(my_env) #> [1] \"heroes_information\" \"super_hero_powers\""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/calc_metadata_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function to calculate summary for each tibble in a supertibble — calc_metadata_stats","title":"Utility function to calculate summary for each tibble in a supertibble — calc_metadata_stats","text":"Utility function calculate summary tibble supertibble","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/calc_metadata_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function to calculate summary for each tibble in a supertibble — calc_metadata_stats","text":"","code":"calc_metadata_stats(data)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/calc_metadata_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function to calculate summary for each tibble in a supertibble — calc_metadata_stats","text":"data tibble redcap data stored redcap_data column supertibble","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/calc_metadata_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function to calculate summary for each tibble in a supertibble — calc_metadata_stats","text":"list containing: data_rows, number rows data data_cols, number columns data data_size, size data bytes data_na_pct, percentage cells NA excluding identifiers form completion fields","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_forms_exist.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that all requested instruments are in REDCap project metadata — check_forms_exist","title":"Check that all requested instruments are in REDCap project metadata — check_forms_exist","text":"Provide error message instrument names passed read_redcap() exist project metadata.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_forms_exist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that all requested instruments are in REDCap project metadata — check_forms_exist","text":"","code":"check_forms_exist(db_metadata, forms)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_forms_exist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check that all requested instruments are in REDCap project metadata — check_forms_exist","text":"db_metadata metadata file read REDCapR::redcap_metadata_read() forms character vector instrument names passed read_redcap()","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_forms_exist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check that all requested instruments are in REDCap project metadata — check_forms_exist","text":"error message listing requested instruments exist","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_redcap_populated.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that a supplied REDCap database is populated — check_redcap_populated","title":"Check that a supplied REDCap database is populated — check_redcap_populated","text":"Check potential outputs metadata present, nrow ncol equal 0. causes multi_choice_to_labels fail, helpful error message provided.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_redcap_populated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that a supplied REDCap database is populated — check_redcap_populated","text":"","code":"check_redcap_populated(db_data)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_redcap_populated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check that a supplied REDCap database is populated — check_redcap_populated","text":"db_data REDCap database output generated REDCapR::redcap_read_oneshot()$data","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_redcap_populated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check that a supplied REDCap database is populated — check_redcap_populated","text":"helpful error message alerting user check API privileges.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_repeat_and_nonrepeat.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for instruments that have both repeating and non-repeating structure — check_repeat_and_nonrepeat","title":"Check for instruments that have both repeating and non-repeating structure — check_repeat_and_nonrepeat","text":"Check potential instruments given repeating nonrepeating structure. REDCapTidieR support database structures built way.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_repeat_and_nonrepeat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for instruments that have both repeating and non-repeating structure — check_repeat_and_nonrepeat","text":"","code":"check_repeat_and_nonrepeat(db_data)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_repeat_and_nonrepeat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for instruments that have both repeating and non-repeating structure — check_repeat_and_nonrepeat","text":"db_data REDCap database output generated REDCapR::redcap_read_oneshot()$data","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_repeat_and_nonrepeat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for instruments that have both repeating and non-repeating structure — check_repeat_and_nonrepeat","text":"helpful error message alerting user existence instrument designated repeating non-repeating.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_req_labelled_fields.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that a supertibble contains redcap_data and\nredcap_metadata fields — check_req_labelled_fields","title":"Check that a supertibble contains redcap_data and\nredcap_metadata fields — check_req_labelled_fields","text":"Provide error message tibble missing redcap_data redcap_metadata","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_req_labelled_fields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that a supertibble contains redcap_data and\nredcap_metadata fields — check_req_labelled_fields","text":"","code":"check_req_labelled_fields(supertbl)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_req_labelled_fields.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check that a supertibble contains redcap_data and\nredcap_metadata fields — check_req_labelled_fields","text":"supertbl supertibble","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_req_labelled_fields.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check that a supertibble contains redcap_data and\nredcap_metadata fields — check_req_labelled_fields","text":"error message indicating required columns missing","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_req_labelled_metadata_fields.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that all metadata tibbles within a supertibble contain\nfield_name and field_label columns — check_req_labelled_metadata_fields","title":"Check that all metadata tibbles within a supertibble contain\nfield_name and field_label columns — check_req_labelled_metadata_fields","text":"Check metadata tibbles within supertibble contain field_name field_label columns","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_req_labelled_metadata_fields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that all metadata tibbles within a supertibble contain\nfield_name and field_label columns — check_req_labelled_metadata_fields","text":"","code":"check_req_labelled_metadata_fields(supertbl)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_req_labelled_metadata_fields.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check that all metadata tibbles within a supertibble contain\nfield_name and field_label columns — check_req_labelled_metadata_fields","text":"supertbl supertibble containing redcap_metadata column","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_req_labelled_metadata_fields.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check that all metadata tibbles within a supertibble contain\nfield_name and field_label columns — check_req_labelled_metadata_fields","text":"error message alerting instrument metadata incomplete","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_user_rights.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for possible API user privilege issues — check_user_rights","title":"Check for possible API user privilege issues — check_user_rights","text":"Check potential user access privilege issues provide appropriate warning message. can occur metadata forms/field names appear database export.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_user_rights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for possible API user privilege issues — check_user_rights","text":"","code":"check_user_rights(db_data, db_metadata)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_user_rights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for possible API user privilege issues — check_user_rights","text":"db_data REDCap database output generated REDCapR::redcap_read_oneshot()$data db_metadata REDCap metadata output generated REDCapR::redcap_metadata_read()$data","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_user_rights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for possible API user privilege issues — check_user_rights","text":"helpful error message alerting user check API privileges.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/clean_redcap.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract non-longitudinal REDCap databases into tidy tibbles — clean_redcap","title":"Extract non-longitudinal REDCap databases into tidy tibbles — clean_redcap","text":"Helper function internal read_redcap responsible extraction final processing tidy tibble user non-longitudinal REDCap database.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/clean_redcap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract non-longitudinal REDCap databases into tidy tibbles — clean_redcap","text":"","code":"clean_redcap(db_data, db_metadata)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/clean_redcap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract non-longitudinal REDCap databases into tidy tibbles — clean_redcap","text":"db_data REDCap database output defined REDCapR::redcap_read_oneshot()$data db_metadata REDCap metadata output defined REDCapR::redcap_metadata_read()$data","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/clean_redcap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract non-longitudinal REDCap databases into tidy tibbles — clean_redcap","text":"Returns tibble list elements containing tidy dataframes. Users can access dataframes redcap_data column reference form_name structure column details.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/clean_redcap_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract longitudinal REDCap databases into tidy tibbles — clean_redcap_long","title":"Extract longitudinal REDCap databases into tidy tibbles — clean_redcap_long","text":"Helper function internal read_redcap responsible extraction final processing tidy tibble user longitudinal REDCap database.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/clean_redcap_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract longitudinal REDCap databases into tidy tibbles — clean_redcap_long","text":"","code":"clean_redcap_long(db_data_long, db_metadata_long, linked_arms)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/clean_redcap_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract longitudinal REDCap databases into tidy tibbles — clean_redcap_long","text":"db_data_long longitudinal REDCap database output defined REDCapR::redcap_read_oneshot()$data db_metadata_long longitudinal REDCap metadata output defined REDCapR::redcap_metadata_read()$data linked_arms Output link_arms, linking instruments REDCap events/arms","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/clean_redcap_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract longitudinal REDCap databases into tidy tibbles — clean_redcap_long","text":"Returns tibble list elements containing tidy dataframes. Users can access dataframes redcap_data column reference form_name structure column details.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated functions — deprecated","title":"Deprecated functions — deprecated","text":"Use read_redcap() instead read_redcap_tidy(). Note suppress_messages argument renamed suppress_redcapr_messages.  Use read_redcap() instead import_redcap(). Use bind_tibbles() instead bind_tables(). Note .data argument renamed supertbl structure argument removed. Use extract_tibble() instead extract_table(). Note .data argument renamed supertbl. Use extract_tibbles() instead extract_tables(). Note .data argument renamed supertbl.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated functions — deprecated","text":"","code":"read_redcap_tidy(   redcap_uri,   token,   raw_or_label = \"label\",   forms = NULL,   export_survey_fields = TRUE,   suppress_messages = TRUE )  import_redcap(   redcap_uri,   token,   raw_or_label = \"label\",   forms = NULL,   export_survey_fields = TRUE,   suppress_redcapr_messages = TRUE )  bind_tables(.data, environment = global_env(), tbls = NULL, structure = NULL)  extract_table(.data, tbl)  extract_tables(.data, tbls = everything())"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/distill_nonrepeat_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract non-repeat tables from non-longitudinal REDCap databases — distill_nonrepeat_table","title":"Extract non-repeat tables from non-longitudinal REDCap databases — distill_nonrepeat_table","text":"Sub-helper function clean_redcap single nonrepeat table extraction.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/distill_nonrepeat_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract non-repeat tables from non-longitudinal REDCap databases — distill_nonrepeat_table","text":"","code":"distill_nonrepeat_table(form_name, db_data, db_metadata)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/distill_nonrepeat_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract non-repeat tables from non-longitudinal REDCap databases — distill_nonrepeat_table","text":"form_name form_name described named column REDCap metadata. db_data REDCap database output defined REDCapR::redcap_read_oneshot()$data db_metadata REDCap metadata output defined REDCapR::redcap_metadata_read()$data","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/distill_nonrepeat_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract non-repeat tables from non-longitudinal REDCap databases — distill_nonrepeat_table","text":"subset tibble data related specified form_name","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/distill_nonrepeat_table_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract non-repeat tables from longitudinal REDCap databases — distill_nonrepeat_table_long","title":"Extract non-repeat tables from longitudinal REDCap databases — distill_nonrepeat_table_long","text":"Sub-helper function clean_redcap_long single nonrepeat table extraction.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/distill_nonrepeat_table_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract non-repeat tables from longitudinal REDCap databases — distill_nonrepeat_table_long","text":"","code":"distill_nonrepeat_table_long(   form_name,   db_data_long,   db_metadata_long,   linked_arms )"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/distill_nonrepeat_table_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract non-repeat tables from longitudinal REDCap databases — distill_nonrepeat_table_long","text":"form_name form_name described named column REDCap metadata. db_data_long REDCap database output defined REDCapR::redcap_read_oneshot()$data db_metadata_long REDCap metadata output defined REDCapR::redcap_metadata_read()$data linked_arms Output link_arms, linking instruments REDCap events/arms","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/distill_nonrepeat_table_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract non-repeat tables from longitudinal REDCap databases — distill_nonrepeat_table_long","text":"tibble data related specified form_name","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/distill_repeat_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract repeat tables from non-longitudinal REDCap databases — distill_repeat_table","title":"Extract repeat tables from non-longitudinal REDCap databases — distill_repeat_table","text":"Sub-helper function clean_redcap single repeat table extraction.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/distill_repeat_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract repeat tables from non-longitudinal REDCap databases — distill_repeat_table","text":"","code":"distill_repeat_table(form_name, db_data, db_metadata)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/distill_repeat_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract repeat tables from non-longitudinal REDCap databases — distill_repeat_table","text":"form_name form_name described named column REDCap metadata. db_data non-longitudinal REDCap database output defined REDCapR::redcap_read_oneshot()$data db_metadata non-longitudinal REDCap metadata output defined REDCapR::redcap_metadata_read()$data","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/distill_repeat_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract repeat tables from non-longitudinal REDCap databases — distill_repeat_table","text":"subset tibble data related specified form_name","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/distill_repeat_table_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract repeat tables from longitudinal REDCap databases — distill_repeat_table_long","title":"Extract repeat tables from longitudinal REDCap databases — distill_repeat_table_long","text":"Sub-helper function clean_redcap_long single repeat table extraction.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/distill_repeat_table_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract repeat tables from longitudinal REDCap databases — distill_repeat_table_long","text":"","code":"distill_repeat_table_long(   form_name,   db_data_long,   db_metadata_long,   linked_arms )"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/distill_repeat_table_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract repeat tables from longitudinal REDCap databases — distill_repeat_table_long","text":"form_name form_name described named column REDCap metadata. db_data_long REDCap database output defined REDCapR::redcap_read_oneshot()$data db_metadata_long REDCap metadata output defined REDCapR::redcap_metadata_read()$data linked_arms Output link_arms, linking instruments REDCap events/arms","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/distill_repeat_table_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract repeat tables from longitudinal REDCap databases — distill_repeat_table_long","text":"tibble data related specified form_name","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/extract_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a single data tibble from a REDCapTidieR supertibble — extract_tibble","title":"Extract a single data tibble from a REDCapTidieR supertibble — extract_tibble","text":"Take supertibble generated read_redcap() return one data tibbles.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/extract_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a single data tibble from a REDCapTidieR supertibble — extract_tibble","text":"","code":"extract_tibble(supertbl, tbl)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/extract_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a single data tibble from a REDCapTidieR supertibble — extract_tibble","text":"supertbl supertibble generated read_redcap(). Required. tbl redcap_form_name data tibble extract. Required.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/extract_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a single data tibble from a REDCapTidieR supertibble — extract_tibble","text":"tibble.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/extract_tibble.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract a single data tibble from a REDCapTidieR supertibble — extract_tibble","text":"function makes easy extract single instrument's data REDCapTidieR supertibble.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/extract_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract a single data tibble from a REDCapTidieR supertibble — extract_tibble","text":"","code":"# Mock up a supertibble sample_data <- tibble::tribble(   ~redcap_form_name,    ~redcap_data,   ~structure,   \"super_hero_powers\",   list(),         \"repeating\",   \"heroes_information\",  list(),         \"nonrepeating\" )  extract_tibble(sample_data, \"heroes_information\") #> list()"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/extract_tibbles.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract data tibbles from a REDCapTidieR supertibble into a list — extract_tibbles","title":"Extract data tibbles from a REDCapTidieR supertibble into a list — extract_tibbles","text":"Take supertibble generated read_redcap() return named list data tibbles.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/extract_tibbles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract data tibbles from a REDCapTidieR supertibble into a list — extract_tibbles","text":"","code":"extract_tibbles(supertbl, tbls = everything())"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/extract_tibbles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract data tibbles from a REDCapTidieR supertibble into a list — extract_tibbles","text":"supertbl supertibble generated read_redcap(). Required. tbls vector form_names tidyselect helper. Default dplyr::everything().","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/extract_tibbles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract data tibbles from a REDCapTidieR supertibble into a list — extract_tibbles","text":"named list tibbles","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/extract_tibbles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract data tibbles from a REDCapTidieR supertibble into a list — extract_tibbles","text":"function makes easy extract multiple instrument's data REDCapTidieR supertibble named list. Specifying instruments using tidyselect helper functions dplyr::starts_with() dplyr::ends_with() supported.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/extract_tibbles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract data tibbles from a REDCapTidieR supertibble into a list — extract_tibbles","text":"","code":"# Mock up a supertibble sample_data <- tibble::tribble(    ~redcap_form_name,    ~redcap_data, ~structure,    \"super_hero_powers\",   list(),       \"repeating\",    \"heroes_information\",  list(),       \"nonrepeating\" )  # Extract all data tibbles extract_tibbles(sample_data) #> $super_hero_powers #> list() #>  #> $heroes_information #> list() #>   # Only extract data tibbles starting with \"heroes\" extract_tibbles(sample_data, starts_with(\"heroes\")) #> $heroes_information #> list() #>"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/format-helpers.html","id":null,"dir":"Reference","previous_headings":"","what":"Format REDCap variable labels — format-helpers","title":"Format REDCap variable labels — format-helpers","text":"Use functions format_labels argument make_labelled() define variable labels formatted applied data columns redcap_data. functions helpful create pretty variable labels REDCap field labels. fmt_strip_whitespace() removes extra white space inside start end string. thin wrapper stringr::str_trim() stringr::str_squish(). fmt_strip_trailing_colon() removes colon character end string. fmt_strip_trailing_punct() removes punctuation end string. fmt_strip_html() removes html tags string. fmt_strip_field_embedding() removes text curly braces {} REDCap uses special \"field embedding\" logic. Note read_redcap() removes html tags field embedding logic field labels metadata default.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/format-helpers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format REDCap variable labels — format-helpers","text":"","code":"fmt_strip_whitespace(x)  fmt_strip_trailing_colon(x)  fmt_strip_trailing_punct(x)  fmt_strip_html(x)  fmt_strip_field_embedding(x)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/format-helpers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format REDCap variable labels — format-helpers","text":"x character vector","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/format-helpers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format REDCap variable labels — format-helpers","text":"modified character vector","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/format-helpers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format REDCap variable labels — format-helpers","text":"","code":"fmt_strip_whitespace(\"Poorly Spaced   Label \") #> [1] \"Poorly Spaced Label\"  fmt_strip_trailing_colon(\"Label:\") #> [1] \"Label\"  fmt_strip_trailing_punct(\"Label-\") #> [1] \"Label\"  fmt_strip_html(\"<b>Bold Label<\/b>\") #> [1] \"Bold Label\"  fmt_strip_field_embedding(\"Label{another_field}\") #> [1] \"Label\"  supertbl <- tibble::tribble(   ~ redcap_data, ~ redcap_metadata,   tibble::tibble(x = letters[1:3]), tibble::tibble(field_name = \"x\", field_label = \"X Label:\") )  make_labelled(supertbl, format_labels = fmt_strip_trailing_colon) #> # A tibble: 1 × 2 #>   redcap_data      redcap_metadata  #>   <list>           <list>           #> 1 <tibble [3 × 1]> <tibble [1 × 2]>"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/get_fields_to_drop.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine fields included in REDCapR::redcap_read_oneshot output\nthat should be dropped from results of read_redcap — get_fields_to_drop","title":"Determine fields included in REDCapR::redcap_read_oneshot output\nthat should be dropped from results of read_redcap — get_fields_to_drop","text":"Determine fields included REDCapR::redcap_read_oneshot output dropped results read_redcap","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/get_fields_to_drop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine fields included in REDCapR::redcap_read_oneshot output\nthat should be dropped from results of read_redcap — get_fields_to_drop","text":"","code":"get_fields_to_drop(db_metadata, form)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/get_fields_to_drop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine fields included in REDCapR::redcap_read_oneshot output\nthat should be dropped from results of read_redcap — get_fields_to_drop","text":"db_metadata metadata tibble created REDCapR::redcap_metadata_read form name instrument containing identifiers","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/get_fields_to_drop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine fields included in REDCapR::redcap_read_oneshot output\nthat should be dropped from results of read_redcap — get_fields_to_drop","text":"character vector extra field names can used filter results REDCapR::redcap_read_oneshot","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/get_fields_to_drop.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Determine fields included in REDCapR::redcap_read_oneshot output\nthat should be dropped from results of read_redcap — get_fields_to_drop","text":"function applies rules determine fields included results REDCapR::redcap_read_oneshot user request instrument containing identifiers","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/get_record_id_field.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function to extract the name of the project identifier field for\na tibble of REDCap data — get_record_id_field","title":"Utility function to extract the name of the project identifier field for\na tibble of REDCap data — get_record_id_field","text":"Utility function extract name project identifier field tibble REDCap data","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/get_record_id_field.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function to extract the name of the project identifier field for\na tibble of REDCap data — get_record_id_field","text":"","code":"get_record_id_field(data)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/get_record_id_field.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function to extract the name of the project identifier field for\na tibble of REDCap data — get_record_id_field","text":"data tibble REDCap data","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/get_record_id_field.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function to extract the name of the project identifier field for\na tibble of REDCap data — get_record_id_field","text":"name identifier field data","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/get_record_id_field.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Utility function to extract the name of the project identifier field for\na tibble of REDCap data — get_record_id_field","text":"current implementation assumes first field data project identifier","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/link_arms.html","id":null,"dir":"Reference","previous_headings":"","what":"Link longitudinal REDCap instruments with their events/arms — link_arms","title":"Link longitudinal REDCap instruments with their events/arms — link_arms","text":"REDCap databases containing arms events, necessary determine linked variables belong .","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/link_arms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Link longitudinal REDCap instruments with their events/arms — link_arms","text":"","code":"link_arms(redcap_uri, token)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/link_arms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Link longitudinal REDCap instruments with their events/arms — link_arms","text":"redcap_uri REDCap URI token REDCap API token","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/link_arms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Link longitudinal REDCap instruments with their events/arms — link_arms","text":"Returns tibble redcap_event_names list elements containing vector associated instruments.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/make_labelled.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply variable labels to a REDCapTidieR supertibble — make_labelled","title":"Apply variable labels to a REDCapTidieR supertibble — make_labelled","text":"Take supertibble use labelled package apply variable labels columns supertibble well tibble redcap_data, redcap_metadata, redcap_events columns supertibble.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/make_labelled.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply variable labels to a REDCapTidieR supertibble — make_labelled","text":"","code":"make_labelled(supertbl, format_labels = NULL)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/make_labelled.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply variable labels to a REDCapTidieR supertibble — make_labelled","text":"supertbl supertibble generated using read_redcap() format_labels one multiple optional label formatting functions. label formatting function function takes character vector returns modified character vector length. function applied field labels attaching variables. One : NULL apply additional formatting. Default. label formatting function. character name label formatting function. vector list label formatting functions function names applied order. Note ordering may affect results.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/make_labelled.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply variable labels to a REDCapTidieR supertibble — make_labelled","text":"labelled supertibble.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/make_labelled.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply variable labels to a REDCapTidieR supertibble — make_labelled","text":"variable labels data tibbles derived field_label column metadata tibble.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/make_labelled.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply variable labels to a REDCapTidieR supertibble — make_labelled","text":"","code":"supertbl <- tibble::tribble(   ~ redcap_data, ~ redcap_metadata,   tibble::tibble(x = letters[1:3]), tibble::tibble(field_name = \"x\", field_label = \"X Label\"),   tibble::tibble(y = letters[1:3]), tibble::tibble(field_name = \"y\", field_label = \"Y Label\") )  make_labelled(supertbl) #> # A tibble: 2 × 2 #>   redcap_data      redcap_metadata  #>   <list>           <list>           #> 1 <tibble [3 × 1]> <tibble [1 × 2]> #> 2 <tibble [3 × 1]> <tibble [1 × 2]>  make_labelled(supertbl, format_labels = tolower) #> # A tibble: 2 × 2 #>   redcap_data      redcap_metadata  #>   <list>           <list>           #> 1 <tibble [3 × 1]> <tibble [1 × 2]> #> 2 <tibble [3 × 1]> <tibble [1 × 2]>  if (FALSE) { redcap_uri <- Sys.getenv(\"REDCAP_URI\") token <- Sys.getenv(\"REDCAP_TOKEN\")  supertbl <- read_redcap(redcap_uri, token) make_labelled(supertbl) }"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/multi_choice_to_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Update multiple choice fields with label data — multi_choice_to_labels","title":"Update multiple choice fields with label data — multi_choice_to_labels","text":"Update REDCap variables multi-choice types standard form labels taken REDCap metadata.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/multi_choice_to_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update multiple choice fields with label data — multi_choice_to_labels","text":"","code":"multi_choice_to_labels(db_data, db_metadata)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/multi_choice_to_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update multiple choice fields with label data — multi_choice_to_labels","text":"db_data REDCap database object db_metadata REDCap metadata object","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/multi_choice_to_labels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update multiple choice fields with label data — multi_choice_to_labels","text":"Coerce variables field_type \"truefalse\", \"yesno\", \"checkbox\" logical. Introduce form_status_complete column append end tibble outputs. Ensure field_types \"dropdown\" \"radio\" converted appropriately since label appendings important unique .","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/parse_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse labels from REDCap metadata into usable formats — parse_labels","title":"Parse labels from REDCap metadata into usable formats — parse_labels","text":"Takes string separated ,s /|s (.e. comma/tab separated values) containing key value pairs (raw label) returns tidy tibble.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/parse_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse labels from REDCap metadata into usable formats — parse_labels","text":"","code":"parse_labels(string, return_vector = FALSE)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/parse_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse labels from REDCap metadata into usable formats — parse_labels","text":"string db_metadata$select_choices_or_calculations field pre-filtered checkbox field_type return_vector logical whether return result vector","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/parse_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse labels from REDCap metadata into usable formats — parse_labels","text":"tidy tibble matrix giving raw label outputs used later functions return_vector = FALSE, default. Otherwise vector result c(raw = label) format use dplyr::recode","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/parse_labels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parse labels from REDCap metadata into usable formats — parse_labels","text":"associated string comes metadata outputs.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/read_redcap.html","id":null,"dir":"Reference","previous_headings":"","what":"Import a REDCap database into a tidy supertibble — read_redcap","title":"Import a REDCap database into a tidy supertibble — read_redcap","text":"Query REDCap API retrieve data metadata project, transform output \"supertibble\" contains data metadata organized tibbles, broken instrument.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/read_redcap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import a REDCap database into a tidy supertibble — read_redcap","text":"","code":"read_redcap(   redcap_uri,   token,   raw_or_label = \"label\",   forms = NULL,   export_survey_fields = TRUE,   suppress_redcapr_messages = TRUE )"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/read_redcap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import a REDCap database into a tidy supertibble — read_redcap","text":"redcap_uri URI/URL REDCap server (e.g., \"https://server.org/apps/redcap/api/\"). Required. token user-specific string serves password project. Required. raw_or_label string (either 'raw' 'label') specifies whether export raw coded values labels options categorical fields. Default 'label'. forms character vector REDCap instrument names specifies instruments import. Default NULL imports instruments project. export_survey_fields logical specifies whether export survey identifier timestamp fields available. Default TRUE. suppress_redcapr_messages logical control whether suppress messages REDCapR API calls. Default TRUE.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/read_redcap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import a REDCap database into a tidy supertibble — read_redcap","text":"tibble row represents REDCap instrument. contains following columns: redcap_form_name, name instrument redcap_form_label, label instrument redcap_data, tibble data instrument redcap_metadata, tibble data dictionary entries field instrument redcap_events, tibble information arms longitudinal events represented instrument. project longitudinal events enabled structure, instrument structure, either \"repeating\" \"nonrepeating\" data_rows, number rows instrument's data tibble data_cols, number columns instrument's data tibble data_size, size memory instrument's data tibble computed lobstr::obj_size() data_na_pct, percentage cells instrument's data columns NA excluding identifier form completion columns","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/read_redcap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import a REDCap database into a tidy supertibble — read_redcap","text":"function uses REDCapR package query REDCap API. REDCap API returns block matrix mashes data data collection instruments together. read_redcap() function deconstructs block matrix splices data individual tibbles, one tibble represents data one instrument.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/read_redcap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import a REDCap database into a tidy supertibble — read_redcap","text":"","code":"if (FALSE) { redcap_uri <- Sys.getenv(\"REDCAP_URI\") token <- Sys.getenv(\"REDCAP_TOKEN\")  read_redcap(    redcap_uri,    token,    raw_or_label = \"label\"  ) }"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/resolve_formatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert user input into label formatting function — resolve_formatter","title":"Convert user input into label formatting function — resolve_formatter","text":"Convert user input label formatting function","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/resolve_formatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert user input into label formatting function — resolve_formatter","text":"","code":"resolve_formatter(format_labels, env = caller_env(n = 2))"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/resolve_formatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert user input into label formatting function — resolve_formatter","text":"format_labels argument passed make_labelled env environment look functions format_labels contains character elements. default, caller_env(n = 2), uses environment user called make_labelled()","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/resolve_formatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert user input into label formatting function — resolve_formatter","text":"function","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/strip_html_field_embedding.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove html tags and field embedding logic from a string — strip_html_field_embedding","title":"Remove html tags and field embedding logic from a string — strip_html_field_embedding","text":"Remove html tags field embedding logic string","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/strip_html_field_embedding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove html tags and field embedding logic from a string — strip_html_field_embedding","text":"","code":"strip_html_field_embedding(x)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/strip_html_field_embedding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove html tags and field embedding logic from a string — strip_html_field_embedding","text":"x vector strings format","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/strip_html_field_embedding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove html tags and field embedding logic from a string — strip_html_field_embedding","text":"vector strings html tags, field embedding logic, extra whitespace removed","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/update_data_col_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Correctly label variables belonging to checkboxes with minus signs — update_data_col_names","title":"Correctly label variables belonging to checkboxes with minus signs — update_data_col_names","text":"Using db_data db_metadata, temporarily create conversion column reverts automatic REDCap behavior database column names \"-\"s converted \"_\"s.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/update_data_col_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correctly label variables belonging to checkboxes with minus signs — update_data_col_names","text":"","code":"update_data_col_names(db_data, db_metadata)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/update_data_col_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correctly label variables belonging to checkboxes with minus signs — update_data_col_names","text":"db_data REDCap database output defined REDCapR::redcap_read_oneshot()$data db_metadata REDCap metadata output defined REDCapR::redcap_metadata_read()$data","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/update_data_col_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correctly label variables belonging to checkboxes with minus signs — update_data_col_names","text":"Updated db_data column names checkboxes \"-\"s replaced \"_\"s.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/update_data_col_names.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Correctly label variables belonging to checkboxes with minus signs — update_data_col_names","text":"issue checkbox fields since analysts able verify checkbox variable suffices label counterparts.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/update_field_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Update metadata field names for checkbox handling — update_field_names","title":"Update metadata field names for checkbox handling — update_field_names","text":"Takes db_metadata object : replaces checkbox field rows set rows, one checkbox option appends field_name_updated field end checkbox variable handling updates field_label new checkbox rows include specific option \"field_label: option label\" format strips html field embedding logic field_label","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/update_field_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update metadata field names for checkbox handling — update_field_names","text":"","code":"update_field_names(db_metadata)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/update_field_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update metadata field names for checkbox handling — update_field_names","text":"db_metadata REDCap metadata output defined REDCapR::redcap_metadata_read()$data","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/update_field_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update metadata field names for checkbox handling — update_field_names","text":"Column db_metadata field_name_updated appended field_label updated new rows corresponding checkbox options","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/update_field_names.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update metadata field names for checkbox handling — update_field_names","text":"Assumes db_metadata: non-zero number rows contains field_name field_label columns","code":""}]
